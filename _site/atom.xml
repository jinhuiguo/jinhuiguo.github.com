<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Guojinhui blog</title>
 <link href="https://jinhuiguo.github.io//atom.xml" rel="self"/>
 <link href="https://jinhuiguo.github.io/"/>
 <updated>2020-12-23T23:05:08+08:00</updated>
 <id>https://jinhuiguo.github.io//</id>
 <author>
   <name>Guojinhui</name>
 </author>

 
 <entry>
   <title>在Xcode中使用Lottie-OC</title>
   <link href="https://jinhuiguo.github.io//2019/03/08/lottie-oc.html"/>
   <updated>2019-03-08T00:00:00+08:00</updated>
   <id>urn:uuid:80599c6f-70ee-44f0-8e34-9eb7ed776fce</id>
   <content type="html">&lt;p&gt;以前研究过的问题希望都能在blog上记录下来，以便后续遇到同样的问题可以很快的解决。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用CocoaPods安装Lottie动画库&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;启动 Xcode 创建项目，项目路径必须是英文，比如：LottieDemo并保存。创建完项目必须完全退出 Xcode。打开Terminal，cd到自己的项目目录下（cd +空格+直接拖拽项目到终端），在terminal中运行 pod init 指令来创建一个Podfile。&lt;/p&gt;

&lt;p&gt;打开Podfile文件&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Uncomment the next line to define a global platform for your project

# platform :ios, '9.0'

target 'AnswerWindow' do

# Uncomment the next line if you're using Swift or would like to use dynamic frameworks

# use_frameworks!

# Pods for AnswerWindow

pod 'lottie-ios'

end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们只加一行pod ‘lottie-ios’来指出这是这个项目需要的pod。然后回Terminal运行下列指令：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pod install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CocoaPods会下载Lottie动画库并在Xcode项目中打包。打包结束后你会发现出现一个叫LottieDemo.xcworkspace.的新项目文件。在Xcode中打开这个文件并开始进行编码。&lt;/p&gt;

&lt;p&gt;2.Lottie使用&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#import &quot;ViewController.h&quot;
#import &amp;lt;Lottie/Lottie.h&amp;gt;

@interface ViewController ()

@property (nonatomic,strong) LOTAnimationView *lottieHeart;

@end

@implementation ViewController

- (void)viewDidLoad {
    [super viewDidLoad];

    self.lottieHeart = [LOTAnimationView animationNamed:@&quot;heart&quot;];

    self.lottieHeart.contentMode = UIViewContentModeScaleAspectFit;

//    self.heart.backgroundColor = [UIColor redColor];

    [self.view addSubview:self.lottieHeart];

    self.lottieHeart.loopAnimation = YES;

}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.lottieHeart play];
}

- (void)viewDidDisappear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.lottieHeart pause];

}


- (void)viewDidLayoutSubviews
{
    [super viewDidLayoutSubviews];
    CGRect lottieRect = CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height);

    self.lottieHeart.frame = lottieRect;
}

@end

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>通过http代理服务器连接ssh</title>
   <link href="https://jinhuiguo.github.io//2007/10/13/ssh-via-proxy.html"/>
   <updated>2007-10-13T00:00:00+08:00</updated>
   <id>urn:uuid:b0a80dce-0a14-4957-94b4-639fcae2815a</id>
   <content type="html">&lt;p&gt;今天着实让我很惊讶，ssh居然不能直接设置代理服务器，而必须通过tunnel（或者就是我太挫，没找到其他办法）&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;找个Tunnel，比如&lt;a href=&quot;http://www.agroman.net/corkscrew/corkscrew-2.0.tar.gz&quot;&gt;corkscrew&lt;/a&gt;，然后解开tar包，编译安装&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ./configure
 make &amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;设置ssh，编辑ssh配置文件，/etc/ssh/ssh_config&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; vi /etc/ssh/ssh_config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;然后加入&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Host *
     ProxyCommand corkscrew proxy_server proxy_port %h %p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;如果需要验证文件的话，还要在后面加入验证文件，如下&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;        ProxyCommand corkscrew proxy_server proxy_port %h %p authfile&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ok，现在可以直接ssh了

    ssh username@server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>在线guid生成</title>
   <link href="https://jinhuiguo.github.io//2006/07/24/guid.html"/>
   <updated>2006-07-24T00:00:00+08:00</updated>
   <id>urn:uuid:b87da13a-a4dd-402f-b06a-cef7eeee2d80</id>
   <content type="html">&lt;p&gt;全局唯一标识符（GUID，Globally Unique Identifier）是一种由算法生成的二进制长度为128位的数字标识符。&lt;/p&gt;

&lt;p&gt;生成gudi网站&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://www.guidgen.com/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 
</feed>
